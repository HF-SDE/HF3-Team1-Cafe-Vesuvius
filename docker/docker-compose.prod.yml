name: Cafe Vesuvius

services:
  backend:
    container_name: backend
    build:
      context: ../backend/
      dockerfile: Dockerfile.production
    expose:
      - "3001"
    depends_on:
      - db
    env_file:
      - ../config/environment-variables/.env.backend.prod
    volumes:
      - ../schemas:/usr/src/app/dist/schemas
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - internal

  web:
    container_name: web
    build:
      context: ../frontend/
      dockerfile: Dockerfile.production
    expose:
      - "3000"
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://reverse-proxy/api
      - NODE_ENV=production
    networks:
      - internal

  db:
    container_name: db
    build:
      context: .
      dockerfile: db.Dockerfile
    ports:
      - "27017:27017"
    command:
      [
        "mongod",
        "--keyFile",
        "/data/keyfile.pem",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27017",
      ]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - ../config/environment-variables/.env.db.prod
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "mongodb://localhost:27017",
          "--eval",
          "db.runCommand('ping')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - internal

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - ../config/environment-variables/.env.db.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
    
  reverse-proxy:
    container_name: reverse-proxy
    build:
      context: ..
      dockerfile: docker/nginx.Dockerfile
    ports:
      - 80:80
    depends_on:
      - backend
    # configs:
    #   - source: nginx_config
    #     target: /etc/nginx/nginx.conf
    volumes:
      - C:\Users\HFGF\Documents\HF3-Team1-Cafe-Vesuvius\config\nginx.conf:/etc/nginx/nginx.conf
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - internal

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    ports:
      - 4040:4040
    command: ["http", "http://reverse-proxy:80", "--url=${NGROK_URL}"]
    env_file:
      - ../config/environment-variables/.env.grok.prod
    networks:
      - public
      - internal

networks:
  public:
    driver: bridge
  internal:
    name: internal
    internal: true

volumes:
  mongo1_data: {}
  mongo1_config: {}
  postgres_data: {}

# configs:
#   nginx_config:
#     file: ../config/nginx.conf
