name: Cafe Vesuvius

services:
  backend:
    container_name: backend
    build:
      context: ../backend/
      dockerfile: Dockerfile
      target: base
    expose:
      - "3001"
    command: ["npm", "run", "dev"]
    depends_on:
      - db
    env_file:
      - ../config/environment-variables/.env.backend.dev
    volumes:
      - ../backend/src:/usr/src/app/src
      - ../schemas:/usr/src/app/schemas
    configs:
      - source: backend_nodemon
        target: /usr/src/app/nodemon.json
    networks:
      - internal

  web:
    container_name: web
    build:
      context: ../frontend/
      dockerfile: Dockerfile
      target: base
    expose:
      - "3000"
    command: ["npm", "run", "dev"]
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://reverse-proxy/api
    volumes:
      - ../frontend:/usr/src/app
    configs:
      - source: web_nodemon
        target: /usr/src/app/nodemon.json
    networks:
      - internal

  db:
    container_name: db
    build:
      context: .
      dockerfile: db.Dockerfile
    expose:
      - "27017"
    ports:
      - "27017:27017"
    command:
      [
        "mongod",
        "--keyFile",
        "/data/keyfile.pem",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27017",
      ]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - ../config/environment-variables/.env.db.dev
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
    networks:
      - public
      - internal

  postgres:
    container_name: postgres
    image: postgres:latest
    expose:
      - "5432"
    ports:
      - 5432:5432
    env_file:
      - ../config/environment-variables/.env.db.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - public
      - internal

  reverse-proxy:
    container_name: reverse-proxy
    build:
      context: ..
      dockerfile: docker/nginx.Dockerfile
    ports:
      - 80:80
    depends_on:
      - backend
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    networks:
      - internal

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    ports:
      - 4040:4040
    command: ["http", "http://reverse-proxy:80", "--url=${NGROK_URL}"]
    env_file:
      - ../config/environment-variables/.env.grok.dev
    networks:
      - public
      - internal

networks:
  public:
    driver: bridge
  internal:
    name: internal
    internal: true

volumes:
  mongo1_data: {}
  mongo1_config: {}
  postgres_data: {}

configs:
  nginx_config:
    file: ../config/nginx.conf
  web_nodemon:
    file: ../frontend/nodemon.json
  backend_nodemon:
    file: ../backend/nodemon.json