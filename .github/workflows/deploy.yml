name: Docker Compose Deployment

on:
  push:
    branches:
      - main  # Change to your branch if needed

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64, ubuntu]

    steps:
      # Checkout code from the repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up SSH access
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      # Add the remote server to known_hosts
      - name: Add Remote Server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Copy files to the server (optional)
      - name: Copy files to server
        run: |
          scp -r ./config ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/usr/app/
          scp -r ./schemas ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/usr/app/
          scp -r ./backend ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/usr/app/
          scp -r ./frontend ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/usr/app/
          scp -r ./docker ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/usr/app/
          scp -r ./package.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/usr/app/

      - name: Make environment files
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /usr/app/config

            echo "Creating .env file for backend"
            cat <<EOT > .env.backend.prod
            TZ=Europe/Copenhagen
            NODE_ENV=production
            DATABASE_URL=mongodb://${{ secrets.DATABASE_MONGO_USERNAME }}:${{ secrets.DATABASE_MONGO_PASSWORD }}@db:${{ secrets.DATABASE_MONGO_PORT }}/${{ secrets.DATABASE }}?authSource=admin
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            EOT

            echo "Creating .env file for db"
            cat <<EOT > .env.db.prod
            MONGO_INITDB_DATABASE=${{ secrets.DATABASE }}
            MONGO_INITDB_ROOT_USERNAME=${{ secrets.DATABASE_MONGO_USERNAME }}
            MONGO_INITDB_ROOT_PASSWORD=${{ secrets.DATABASE_MONGO_PASSWORD }}
            MONGO_PORT=${{ secrets.DATABASE_MONGO_PORT }}
            POSTGRES_DB=${{ secrets.DATABASE }}
            POSTGRES_USER=${{ secrets.DATABASE_POSTGRES_USERNAME }}
            POSTGRES_PASSWORD=${{ secrets.DATABASE_POSTGRES_PASSWORD }}
            EOT

            echo "Creating .env file for docker"
            cat <<EOT > .env.docker.prod
            NGROK_URL=${{ secrets.NGROK_URL }}
            EOT

            echo "Creating .env file for ngrok"
            cat <<EOT > .env.grok.prod
            NGROK_AUTHTOKEN=${{ secrets.NGROK_AUTHTOKEN }}
            EOT
          EOF

      - name: Deploy with Docker Compose
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /usr/app
            echo "Build Containers"
            docker compose -f ./docker/docker-compose.prod.yml build
            
            echo "Deploying Containers"
            docker compose --env-file ./config/environment-variables/.env.docker.prod -f ./docker/docker-compose.prod.yml up -d

            echo "Initializing the database"
            echo "Creating the replica set"
            docker exec db ./docker-entrypoint-initdb.d/init.sh

            echo "Cleaning up old images"
            docker image prune
          EOF       
