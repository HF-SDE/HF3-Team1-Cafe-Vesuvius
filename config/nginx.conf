# Top-level configurations (e.g., user, worker processes)
user nginx;
worker_processes auto;

# Error log and PID settings
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load modules (if needed)
include /etc/nginx/modules/*.conf;

# Events block
events {
    worker_connections 1024;  # You can adjust this based on your needs
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log format and location
    access_log /var/log/nginx/access.log;

    # Enable gzip
    gzip on;

    # Define server block for HTTPS
    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name _;

        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

        location /api/ {
            proxy_pass http://backend:3001/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $hostname;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Frame-Options SAMEORIGIN;
        }
    }

    # Define server block for HTTP to HTTPS redirection
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;
        return 301 https://$host$request_uri;
    }
}